{"version":3,"sources":["webpack:///./src/assets/markdown/graal.md"],"names":[],"mappings":"gHAAA,OAAe","file":"js/chunk-2d20e8ce.8488e6a8.js","sourcesContent":["export default \"# Projet : Hub de Communication (Graal EMH)\\r\\n\\r\\n## Contexte\\r\\n\\r\\nGraal EMH (aussi connu sous le nom de \\\"Comet\\\" ou \\\"Hub de communication\\\") est une application web développée pour Est Métropole Habitat (EMH) afin de centraliser, rationaliser et moderniser la gestion des communications sortantes.\\r\\n\\r\\n## Objectif Principal\\r\\n\\r\\nL'application permet aux utilisateurs de créer, gérer, personnaliser et envoyer des communications à travers différents canaux, tout en assurant une traçabilité et une cohérence graphique. Elle a été conçue pour remplacer des processus manuels et hétérogènes par une plateforme unique et performante.\\r\\n\\r\\n## Fonctionnalités Clés\\r\\n\\r\\n- **Gestion Multi-Canal :** Prise en charge des envois par **Courrier**, **Email** et **SMS**, avec des logiques et des prestataires adaptés à chaque canal (MySendingBox, Brevo, SMSFactor).\\r\\n- **Système de Maquettes Modulaires :**\\r\\n    - **Briques :** Création de composants de contenu réutilisables et personnalisables.\\r\\n    - **Matrices :** Définition de mises en page (en-tête, pied de page) pour garantir la cohérence visuelle.\\r\\n    - **Modèles :** Assemblage de briques et de matrices pour construire le corps final des communications.\\r\\n- **Personnalisation Dynamique :** Utilisation d'un système de **publipostage** (champs de fusion) pour insérer des données variables dans les communications, que ce soit pour des envois manuels ou automatisés via API.\\r\\n- **Interface d'Administration :** Un back-office complet (basé sur EasyAdmin) pour gérer les modèles, les utilisateurs, et les configurations.\\r\\n- **Intégration et Automatisation :** Une API permet à des applications externes de déclencher des envois de manière automatique, s'intégrant ainsi dans le système d'information d'EMH.\\r\\n- **Archivage :** Les communications importantes peuvent être archivées dans une solution de GED (Gestion Électronique de Documents).\\r\\n\\r\\n## Stack Technique\\r\\n\\r\\n### Backend\\r\\n- **Framework :** Symfony 6.3\\r\\n- **Langage :** PHP 8.1\\r\\n- **Base de données :** MariaDB/MySQL avec Doctrine ORM\\r\\n- **Administration :** EasyAdminBundle\\r\\n- **Tests :** PHPUnit, Pest\\r\\n- **Tâches asynchrones :** Symfony Messenger (RabbitMQ)\\r\\n- **Autres :** Gestion de PDF (KnpSnappyBundle), Envoi d'emails (Symfony Mailer), etc.\\r\\n\\r\\n### Frontend\\r\\n- **Bundler :** Webpack\\r\\n- **Langages :** JavaScript, TypeScript, SASS\\r\\n- **Frameworks/Librairies :**\\r\\n    - jQuery\\r\\n    - Foundation for Sites (Framework CSS)\\r\\n    - Choices.js (pour les listes déroulantes)\\r\\n- **Éditeur de texte riche :** CKEditor 5\\r\\n\\r\\n### DevOps & Outillage\\r\\n- **Conteneurisation :** Docker\\r\\n- **Déploiement :** Deployer\\r\\n- **Intégration Continue :** GitLab CI\\r\\n\";"],"sourceRoot":""}